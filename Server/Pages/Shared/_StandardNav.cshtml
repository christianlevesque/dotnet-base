@using Services.Identity
@inject SignInService SignInService
@inject UserService UserService

@{
	var links = new List<(string, string)>
	{
		("Home", Urls.Index),
		("Privacy", Urls.Privacy)
	};

	if (SignInService.IsSignedIn(User))
	{
		var user = await UserService.GetUserAsync(User);
		links.Add(($"Welcome, {user.UserName}", Urls.Index));
		links.Add(($"Log out", Urls.Account.Logout));
	}
	else
	{
		links.Add(("Register", Urls.Account.Login));
		links.Add(("Log in", Urls.Account.Login));
	}
}

<nav class="navbar navbar-expand-sm fixed-top navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow">
	<div class="container">
		<a asp-area=""
		   asp-page="/Index"
		   class="navbar-brand">
			#sitename# <!-- TODO: Set up site identity -->
		</a>

		<button class="navbar-toggler"
		        type="button"
		        data-bs-target=".navbar-collapse"
		        data-bs-toggle="collapse">
			<i id="toggler-icon" class="fal fa-bars"></i>
		</button>

		<div id="navbar"
		     class="navbar-collapse collapse d-sm-inline-flex justify-content-end text-primary text-uppercase">
			<ul id="navbar-nav">
				@foreach (var link in links)
				{
					var (text, url) = link;
					<li class="nav-item">
						<a asp-area=""
						   asp-page="@url"
						   class="nav-link">
							@text
						</a>
					</li>
				}
			</ul>
		</div>
	</div>
</nav>